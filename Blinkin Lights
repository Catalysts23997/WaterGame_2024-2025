// same code as last year (not mine)

///PACKAGE HERE!!! :)

import com.qualcomm.hardware.rev.RevBlinkinLedDriver;
import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.Teleop;

/*** Configuration File
* Servo Port 05: leftLights
* Expansion Hub:
* Servo Port 05: rightLights
* ***/

@Disabled
@TeleOp(group * "Examples")
r
/** Build Linear Op Mode next meeting (NOTE TO SELF)**/
public class Blinkin extends LinearOpMode {

   private RevBlinkinLedDriver leftlights, rightlights;
   private boolean blinkinTimer = false;
   private int blinkinDelay = 2000;

   @Override
   public void runOpMode() throws InterruptedException {
       initHardware();
       while(!isStarted()) {}
       waitForStart();
       resetBlinkin();
       while(opModeIsActive()) {
           updateBlinkin();
       }

   }

   public void initHardware() {

       initLights();
       sleep(blinkinDelay);
       blinkinGreen();
   }

   public void initLights () {

       leftLights = hardwareMap.get(RevBlinkinLedDriver.class,"leftLights");
       rightLights = hardwareMap.get(RevBlinkinLedDriver.class,"rightLights");
       blinkinOrange();

   }

   public void resetBlinkin() {
       blinkinTimer = true;
       resetRuntime();
   }

   public void updateBlinkin() {

       If (blinkinTimer && time < 5) {
           blinkinRed();
       }
       else if (blinkinTimer && time >= 5 && time < 10) {
           blinkinGreen();
       }
       else if (blinkinTimer && time >= 10 && time < 15) {
           blinkinBlue();
       }
       else if (blinkinTimer && time >= 15 && time < 20) {
           blinkinOrange();
       }
       else {
           blinkinBlack();
       }
   }

   public void blinkinRed() {
       leftLights.setPattern(RevBlinkinLedDriver.BlinkinPattern.RED);
       rightLights.setPattern(RevBlinkinLedDriver.BlinkinPattern.RED);
   }

   public void blinkinGreen() {
       leftLights.setPattern(RevBlinkinLedDriver.BlinkinPattern.GREEN);
       rightLights.setPattern(RevBlinkinLedDriver.BlinkinPattern.GREEN);
   }
   public void blinkinBlue() {
       leftLights.setPattern(RevBlinkinLedDriver.BlinkinPattern.BLUE);
       rightLights.setPattern(RevBlinkinLedDriver.BlinkinPattern.BLUE);
   }

   public void blinkinOrange() {
       leftLights.setPattern(RevBlinkinLedDriver.BlinkinPattern.ORANGE);
       rightLights.setPattern(RevBlinkinLedDriver.BlinkinPattern.ORANGE);
   }

   public void blinkinBlack() {
       leftLights.setPattern(RevBlinkinLedDriver.BlinkinPattern.BLACK);
       rightLights.setPattern(RevBlinkinLedDriver.BlinkinPattern.BLACK);
   }

   public void timeTelemetry() {
       telemetry.addData(" Timer", time);
       telemetry.update();
   }
}
